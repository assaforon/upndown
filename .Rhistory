library(upndown)
8/0.4
library(upndown)
?classicmat
.Machine$integer.max
.Machine$integer.max^(1/16)
k2targ(20)
k2targ<-function(k,hitarg=TRUE)
{
if(k!=round(k) || k<=0) stop("k can only be a natural number.")
tmp=0.5^(1/k)
if(hitarg) return(tmp)
1-tmp
}
k2targ(20)
k2targ(30)
library(upndown)
?currentvec
library(upndown)
source("~/GitHub/upndown/inst/examples/vecExamples.r")
equivF
startdose
source("~/GitHub/upndown/R/vectorFunctions.r")
source("~/GitHub/upndown/inst/examples/vecExamples.r")
library(upndown)
source("~/GitHub/upndown/inst/examples/vecExamples.r")
rm(list=ls())
source("~/GitHub/upndown/inst/examples/vecExamples.r")
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
cumulvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30)
library(upndown)
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
cumulvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30)
library(upndown)
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
cumulvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30)
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
plot(cumulvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30))
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
plot(pivec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30))
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
plot(pivec(cdf = equivF, matfun = classicmat))
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
plot(currentvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30))
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
plot(as.numeric(currentvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30)))
library(upndown)
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
plot(currentvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30))
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
plot(cumulvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30))
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
lines(pivec(cdf = equivF, matfun = classicmat))
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
points(pivec(cdf = equivF, matfun = classicmat),col=2)
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
points(currentvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30),col=4)
# Finally, the values feeding into the Fig. 2B barplot
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.(currentvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30))
currentvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30)
currentvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 31)
?currentvec
library(upndown)
1643*33
library(upndown)
ktargOptions(.6)
ktargOptions(c(.6,.7)
)
ktargOptions(.6,expand=3)
library(upndown)
ktargOptions(.6,expand=3)
ktargOptions(.6)
ktargOptions(.6, tol=.3)
library(upndown)
g2targ(3,0.3,2)
library(upndown)
g2targ(3,0.3,2)
g2targ(3,0,2)
g2targ(3,0,1)
g2targ(1,0,1)
g2targ(2,0,1)
library(upndown)
g2targ(2,0,1)
library(upndown)
g2targ(3,0,3)
g2targ(3,0,2)
g2targ(3,1,2)
library(upndown)
g2targ(3,1,2)
g2targ(3,0,2)
g2targ(3,0,1)
g2targ(13,0,1)
g2targ(63,0,1)
assign(g2targ)
.Machine$double.xmin
floor(1-.Machine$double.xmin)
floor(1-sqrt(.Machine$double.xmin))
sqrt(.Machine$double.xmin)
floor(1-1e-10)
for(n in 1:5) {
if(n==3) next # skip 3rd iteration and go to next iteration
cat(n)
}
3:0
order(3,6,1,2)
order(c(3,6,1,2))
sort(c(3,6,1,2))
z = (c(3,6,1,2))
z[order(z)]
library(upndown)
gtargOptions(target=0.3, maxsize=2)
library(upndown)
gtargOptions(target=0.3, maxsize=2)
library(upndown)
gtargOptions(target=0.3, maxsize=2)
library(upndown)
gtargOptions(target=0.3, maxsize=2)
library(upndown)
gtargOptions(target=0.3, maxsize=2)
seq(3,2,1)
library(upndown)
seq(3,2,1)
gtargOptions(target=0.3, maxsize=2)
library(upndown)
gtargOptions(target=0.3, maxsize=2)
gtargOptions(target=0.3, maxsize=3)
library(upndown)
gtargOptions(target=0.3, maxsize=3)
library(upndown)
gtargOptions(target=0.3, maxsize=3)
gtargOptions(target=0.1, maxsize=3)
library(upndown)
gtargOptions(target=0.1, maxsize=3)
gtargOptions(target=0.6, maxsize=6)
library(upndown)
gtargOptions(target=0.6, maxsize=6)
library(upndown)
gtargOptions(target=0.6, maxsize=6)
library(upndown)
gtargOptions(target=0.6, maxsize=6)
g2targ(6,4,5)
library(upndown)
gtargOptions(target=0.8, maxsize=5)
gtargOptions(target=0.8, maxsize=5,tol=0.05)
10.7*19
10.17*19
10.71*19
library(cir)
?plot.DRtrace
xlevo = c(11,10,11,10,11:9,10:7,8,7,8:5,6:8,7,8:6,7,6,7,6,7:5,6,7,6:12)
y=(1-diff(xlevo))/2
library(upndown)
udplot(xlevo,y)
udplot(xlevo[-40],y)
udplot(xlevo[-40],y,xtitle='',ytitle='')
par(mar=c(2,2,2,1))
udplot(xlevo[-40],y,xtitle='',ytitle='')
plot(doseResponse(x=xlevo[-40],y=y))
par()
par(mar=c(5,4,4,1))
plot(doseResponse(x=xlevo[-40],y=y))
est
library(upndown)
xlevo = c(11,10,11,10,11:9,10:7,8,7,8:5,6:8,7,8:6,7,6,7,6,7:5,6,7,6:12)
y=(1-diff(xlevo))/2
udplot(xlevo[-40],y,xtitle='',ytitle='')
drplot(xlevo[-40],y)
library(upndown)
xlevo = c(11,10,11,10,11:9,10:7,8,7,8:5,6:8,7,8:6,7,6,7,6,7:5,6,7,6:12)
y=(1-diff(xlevo))/2
drplot(xlevo[-40],y)
traceback()
library(upndown)
library(upndown)
xlevo = c(11,10,11,10,11:9,10:7,8,7,8:5,6:8,7,8:6,7,6,7,6,7:5,6,7,6:12)
y=(1-diff(xlevo))/2
drplot(xlevo[-40],y)
drplot(xlevo[-40],y, target=0.5)
drplot(xlevo[-40],y, target=0.5,balancePt=0.45)
library(upndown)
xlevo = c(11,10,11,10,11:9,10:7,8,7,8:5,6:8,7,8:6,7,6,7,6,7:5,6,7,6:12)
y=(1-diff(xlevo))/2
drplot(xlevo[-40],y, target=0.5,balancePt=0.45)
library(upndown)
drplot(xlevo[-40],y, target=0.5,balancePt=0.45)
drplot(xlevo[-40],y, addest=TRUE, target=0.5,balancePt=0.45)
drplot(xlevo[-40],y, addest=TRUE, target=0.5)
drplot(xlevo[-40],y, addest=TRUE, target=0.5,balancePt=0.4)
drplot(xlevo[-40],y, addest=TRUE, target=0.5)
drplot(xlevo[-40],y, addest=TRUE, target=0.5,balancePt=0.34)
drplot(xlevo[-40],y, addest=TRUE, target=0.5)
warnings()
drplot(xlevo[-40],y, addest=TRUE, target=0.5)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, estsize=1)
library(upndown)
#' @inheritParams udplot
xlevo = c(11,10,11,10,11:9,10:7,8,7,8:5,6:8,7,8:6,7,6,7,6,7:5,6,7,6:12)
y=(1-diff(xlevo))/2
drplot(xlevo[-40],y, addest=TRUE, target=0.5, estsize=1)
library(upndown)
xlevo = c(11,10,11,10,11:9,10:7,8,7,8:5,6:8,7,8:6,7,6,7,6,7:5,6,7,6:12)
y=(1-diff(xlevo))/2
drplot(xlevo[-40],y, addest=TRUE, target=0.5, estsize=1)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE)
doseResponse(x=xlevo[-40],y=y)
6/11
?drplot
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE, varsize=FALSE)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE,conf=.83)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE,conf=.95)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE,conf=.99)
warnings()[1:3]
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE,conf=0)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE,conf=0.01)
plot(doseResponse(xlevo[-40],y), varsize=FALSE)
plot(doseResponse(xlevo[-40],y))
plot(doseResponse(x=xlevo[-40],y=y), varsize=FALSE)
plot(doseResponse(x=xlevo[-40],y=y))
plot(doseResponse(x=xlevo[-40],y=y), varsize=FALSE, refsize=1)
doseResponse(x=xlevo[-40],y=y)
plot(doseResponse(x=xlevo[-40],y=y), varsize=FALSE)
library(upndown)
?drplot
?cir
xlevo = c(11,10,11,10,11:9,10:7,8,7,8:5,6:8,7,8:6,7,6,7,6,7:5,6,7,6:12)
y=(1-diff(xlevo))/2
plot(doseResponse(x=xlevo[-40],y=y), varsize=FALSE)
plot(doseResponse(x=xlevo[-40],y=y), varsize=FALSE, refsize=2)
plot(doseResponse(x=xlevo[-40],y=y), varsize=FALSE, refsize=1, addest=TRUE, conf=.93)
plot(doseResponse(x=xlevo[-40],y=y), addest=TRUE, conf=.93)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE, varsize=FALSE)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE, conf=.5)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE, varsize=FALSE)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, addcurve=TRUE, varsize=FALSE, refsize=1)
drplot(xlevo[-40],y, addest=TRUE, target=0.5, balancePt = 0.3, addcurve=TRUE, varsize=FALSE, refsize=1)
library(upndown)
library(upndown)
?pivec
doses = seq(0, 100, 10)
m=length(doses) # 11 dose levels
zeroPt=63 # the zero-BP point, in unites of percent ketamine
# We assume a Normal ("Probit") dose-response curve,
#   and calculate the value of F (i.e.,  prob (delta BP > 0) at the doses:
equivF = pnorm( (doses - zeroPt) / 20)
round(equivF,3)
# The vector below represents the values feeding into the Fig. 2B barplot.
# "startdose = 6" means we begin from the 6th out of 11 doses, i.e., a 50:50 mix.
cumulvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30)
round(cumulvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30), 3)
round(pivec(cdf = equivF, matfun = classicmat), 3)
round(currentvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30), 3)
library(upndown)
round(currentvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 29), 3)
# We can check how much of that extra weight is from the 1st patient, by excluding them:
round(cumulvec(cdf = equivF, matfun = classicmat, startdose = 6, n = 30, exclude = 1), 3)
m=10
mloc=5.6
slop=2
dk=1:m
fd=plogis(dk,location=mloc,scale=slop)
round(fd,3)
svec1=0:floor(mloc)
s=length(svec1)
mvec1=rep(NA,s)
mvec10=mvec1
for (a in 1:s)
{
mvec1[a]=weighted.mean(dk,w=pivec(cdf=plogis(dk+svec1[a],location=mloc,scale=slop),target=.5))
mvec10[a]=weighted.mean(c(0,dk),w=pivec(cdf=c(0,plogis(dk+svec1[a],location=mloc,scale=slop)),target=.5))
}
svec1
mvec1
svec1=0:floor(mloc)
s=length(svec1)
mvec1=rep(NA,s)
mvec10=mvec1
for (a in 1:s)
{
mvec1[a]=weighted.mean(dk,w=pivec(cdf=plogis(dk+svec1[a],location=mloc,scale=slop),matfun=classicmat))
mvec10[a]=weighted.mean(c(0,dk),w=pivec(cdf=c(0,plogis(dk+svec1[a],location=mloc,scale=slop)),matfun=classicmat))
}
round(mvec1,3)
round(mvec10,3)
library(upndown)
?pivec
library(upndown)
145*.1024
145*.1025
35.75 * 31.63 * 70.25
35.75 * 31.25 * 69.75
265/228
?pweib
?pweibull
round(pweibull(1:8, shape = 2, scale = 3), 3)
round(pweibull(1:8, shape = 2, scale = 10), 3)
round(pweibull(1:8, shape = 2, scale = 5), 3)
round(pweibull(1:8, shape = 2, scale = 4), 3)
plot(dweibull(1:8, shape = 2, scale = 4))
plot(pweibull(1:8, shape = 2, scale = 4))
exmapleF = pweibull(1:8, shape = 2, scale = 4)
round(classicmat(exampleF), 3)
exmapleF = pweibull(1:8, shape = 2, scale = 4)
round(classicmat(exampleF), 3)
examleF
exampleF
exampleF = pweibull(1:8, shape = 2, scale = 4)
round(classicmat(exampleF), 3)
round(classicmat(exampleF), 2)
targ2k(.9)
?k2targ
ktargOptions(.9)
round(bcdmat(exampleF, target = 0.9), 2)
round(kmatMarg(exampleF, k = 6, lowTarget = FALSE), 2)
library(upndown)
?bcdmat
ktargOptions(.9, tolerance = 0.05)
dim(kmatFull(exampleF, k = 6, lowTarget = FALSE))
29/17
29/17/12
365 * 5/7
1705/260
17*8*260
ox
ox = c(4:6, rep(7,6), rep(6,5), rep(7,4,8,8:10, rep(11,6), 12,12,rep(11,5), rep(12,3),13,13))
ox = c(4:6, rep(7,6), rep(6,5), rep(7,4),8,8:10, rep(11,6), 12,12,rep(11,5), rep(12,3),13,13))
ox = c(4:6, rep(7,6), rep(6,5), rep(7,4),8,8:10, rep(11,6), 12,12,rep(11,5), rep(12,3),13,13)
length(ox)
onx=ox
ont = (1-diff(onx))/2
table(ont)
ony = (1-diff(onx))/2
ony[ony==.5] = 1
drplot(onx, ony)
drplot(x=onx, y=ony)
traceback()
ony
udplot(onx,ony)
library(upndown)
ox = c(4:6, rep(7,6), rep(6,5), rep(7,4),8,8:10, rep(11,6), 12,12,rep(11,5), rep(12,3),13,13)
ony = (1-diff(onx))/2
ony[ony==.5] = 1
udplot(onx,ony)
ony = c(ony, 1)
udplot(onx,ony)
drplot(onx,ony)
drplot(onx,ony, addest = TRUE)
drplot(onx,ony, addest = TRUE, target = .95)
drest(onx,ony, target = .95)
udest(onx,ony, target = .95)
udest(onx/4,ony, target = .95)
udest(onx/4,ony, target = .9)
drplot(onx/4,ony, addest = TRUE, target = .95)
reversmean(onx/4, ony)
adaptmean(onx/4)
adaptmean(onx/4, full=TRUE)
adaptmean(onx/4, maxExclude=.5)
adaptmean(onx/4, maxExclude=.75)
quickInverse(onx/4,ony, target = .95, adaptiveShring = TRUE, full=TRUE)
quickInverse(x=onx/4,y=ony, target = .95, adaptiveShrink = TRUE, full=TRUE)
doseFind(x=onx/4,y=ony, target = .95, adaptiveShrink = TRUE, full=TRUE)
cirPAVA(x=onx/4,y=ony, target = .95, adaptiveShrink = TRUE, full=TRUE)
obx = c(4:6, rep(7,8), 6:7, rep(8,19), rep(7,4), rep(8,3), 9)
oby = c((1-diff(onx))/2,1)
oby[oby==.5] = 1
udplot(obx/4,oby)
oby = c((1-diff(obx))/2,1)
oby[oby==.5] = 1
udplot(obx/4,oby)
drplot(obx/4,oby)
cirPAVA(x=obx/4,y=oby, target = .95, adaptiveShrink = TRUE, full=TRUE)
udest(obx/4, oby)
udest(obx/4, oby, target=.95)
udest(onx/4, ony, target=.95)
udest(obx/4, oby, target=.95, conf=.95)
udest(onx/4, ony, target=.95, conf=.95)
cl95bupi=DRtrace(x=0.01*c(15:9,10:6,7,6,7:5,6,7:4,5,6,5:8,7,6),
y=c(rep(c(rep(1,5),0),2),1,0,1,1,0,0,rep(1,3),0,0,1,rep(0,3),1,1,0))
drplot(cl95bupi$x, cl95bupi$y)
udplot(cl95bupi$x, cl95bupi$y)
udest(cl95bupi$x, cl95bupi$y, target = .5)
drplot(cl95bupi$x, cl95bupi$y)
udest(cl95bupi$x, cl95bupi$y, target = .5, conf=.95)
drplot(cl95bupi$x, cl95bupi$y, addest= T, target=.5)
drplot(cl95bupi$x, cl95bupi$y, addest= T, target=.5,conf=.95)
drplot(cl95bupi$x, cl95bupi$y, addest= T, target=.5,conf=.95, addcurve=T)
# Bupivacaine:
bupix = 0.01 * c(15:9,10:6,7,6,7:5,6,7:4,5,6,5:8,7,6)
# With classical U&D, responses (except the last one) can be read off the doses:
bupiy=c( (1 - diff(obx))/2, 0 )
udplot(bupix,bupiy)
bupiy
# With classical U&D, responses (except the last one) can be read off the doses:
bupiy=c( (1 - diff(bupix))/2, 0 )
udplot(bupix,bupiy)
bupiy
# For convenience, we first enter doses as integers
# Bupivacaine:
bupix = c(15:9,10:6,7,6,7:5,6,7:4,5,6,5:8,7,6)
# With classical U&D, responses (except the last one) can be read off the doses:
bupiy=c( (1 - diff(bupix))/2, 0 )
# Bupivacaine:
bupix = 0.01 * c(15:9,10:6,7,6,7:5,6,7:4,5,6,5:8,7,6)
# With classical U&D, responses (except the last one) can be read off the doses:
bupiy=c( (1 - sign(diff(bupix)))/2, 0 )
udplot(bupix,bupiy)
library(upndown)
?udplot
source("~/GitHub/upndown/examples/wrapExamples.r")
abline(v=21.7,col=2)
udest(doses, responses, target = 0.5)
